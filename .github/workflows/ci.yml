name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Test 1: remip server tests
  test-remip-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install remip server dependencies
        run: |
          cd remip
          uv sync --dev

      - name: Run remip server tests
        run: |
          cd remip
          uv run pytest tests/ -v

  # Test 2: remip-client Python tests
  test-remip-client-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install remip-client dependencies
        run: |
          cd remip-client
          uv sync --dev

      - name: Run remip-client Python tests
        run: |
          cd remip-client
          uv run pytest tests/ -v

  # Test 3: remip-client Pyodide/Node.js tests
  test-remip-client-pyodide:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: remip-client/tests/node/package-lock.json

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install Node.js dependencies
        run: |
          cd remip-client/tests/node
          npm ci

      - name: Build remip-client wheel
        run: |
          cd remip-client
          uv build

      - name: Run remip-client Pyodide tests
        run: |
          cd remip-client/tests/node
          npm run test-only

  # Integration test: Test with live server
  test-integration:
    runs-on: ubuntu-latest
    needs: [test-remip-server, test-remip-client-python]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install server dependencies
        run: |
          cd remip
          uv sync --dev

      - name: Start server in background
        run: |
          cd remip
          uv run python -m remip.main &
          sleep 5

      - name: Test server health
        run: |
          curl -f http://localhost:8000/health || exit 1

      - name: Run integration tests
        run: |
          cd remip
          uv run pytest tests/ -v
